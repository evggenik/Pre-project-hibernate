Index: src/main/java/jm/task/core/jdbc/dao/UserDaoHibernateImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jm.task.core.jdbc.dao;\n\nimport jm.task.core.jdbc.model.User;\n\nimport jm.task.core.jdbc.util.Util;\nimport org.hibernate.Session;\nimport org.hibernate.Transaction;\nimport org.hibernate.query.Query;\n\nimport java.util.List;\n\nimport static jm.task.core.jdbc.util.Util.getSessionFactory;\n\npublic class UserDaoHibernateImpl implements UserDao {\n    public UserDaoHibernateImpl() {\n\n    }\n\n    @Override\n    public void createUsersTable() {\n        Session session = getSessionFactory().openSession();\n        Transaction transaction = session.beginTransaction();\n        String sql = \"create table if not exists users (id BIGINT NOT NULL AUTO_INCREMENT,\" +\n                \"name VARCHAR(45) NULL,\" +\n                \"lastname VARCHAR(45) NULL,\" +\n                \"age TINYINT NULL,\" +\n                \"PRIMARY KEY (id))\";\n        Query query = session.createSQLQuery(sql).addEntity(User.class);\n        query.executeUpdate();\n        transaction.commit();\n        session.close();\n    }\n\n    @Override\n    public void dropUsersTable() {\n        Session session = getSessionFactory().openSession();\n        Transaction transaction = session.beginTransaction();\n\n        String sql = \"DROP TABLE IF EXISTS users\";\n\n        Query query = session.createSQLQuery(sql).addEntity(User.class);\n        query.executeUpdate();\n\n        transaction.commit();\n        session.close();\n\n    }\n\n    @Override\n    public void saveUser(String name, String lastName, byte age) {\n        User user = new User(name, lastName, age);\n        Transaction transaction = null;\n        try (Session session = Util.getSessionFactory().openSession()) {\n            transaction = session.beginTransaction();\n            session.save(user);\n            System.out.println(\"User с именем - \" + user.getName() + \" добавлен в базу данных\");\n            transaction.commit();\n            session.close();\n        } catch (Exception e) {\n            if (transaction != null) {\n                transaction.rollback();\n            }\n            e.printStackTrace();\n        }\n\n    }\n\n    @Override\n    public void removeUserById(long id) {\n        Transaction transaction = null;\n//        Query query = session.createQuery(\"delete User where id = :ID\");\n//        query.setParameter(\"ID\", id);\n//        query.executeUpdate();\n        try (Session session = Util.getSessionFactory().openSession()) {\n            transaction = session.beginTransaction();\n            User user = session.get(User.class, id);\n            session.delete(user);\n            transaction.commit();\n            session.close();\n        } catch (Exception e) {\n            if (transaction != null) {\n                System.out.println(\"Что-то пошло не так. Откатить транзакцию...\");\n                transaction.rollback();\n            }\n            e.printStackTrace();\n        }\n\n    }\n\n    @Override\n    public List<User> getAllUsers() {\n        try (Session session = Util.getSessionFactory().openSession()) {\n            return session.createQuery(\"from User\", User.class).list();\n        }\n    }\n\n    @Override\n    public void cleanUsersTable() {\n        Session session = Util.getSessionFactory().openSession();\n        session.beginTransaction();\n        Query<User> query = session.createQuery(\"delete from User\");\n        query.executeUpdate();\n        session.getTransaction().commit();\n        session.close();\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/jm/task/core/jdbc/dao/UserDaoHibernateImpl.java b/src/main/java/jm/task/core/jdbc/dao/UserDaoHibernateImpl.java
--- a/src/main/java/jm/task/core/jdbc/dao/UserDaoHibernateImpl.java	(revision 99dd60f252349642269bb761f819830b8aaf93e3)
+++ b/src/main/java/jm/task/core/jdbc/dao/UserDaoHibernateImpl.java	(date 1688430253639)
@@ -9,8 +9,6 @@
 
 import java.util.List;
 
-import static jm.task.core.jdbc.util.Util.getSessionFactory;
-
 public class UserDaoHibernateImpl implements UserDao {
     public UserDaoHibernateImpl() {
 
@@ -18,7 +16,7 @@
 
     @Override
     public void createUsersTable() {
-        Session session = getSessionFactory().openSession();
+        Session session = Util.getSessionFactory().openSession();
         Transaction transaction = session.beginTransaction();
         String sql = "create table if not exists users (id BIGINT NOT NULL AUTO_INCREMENT," +
                 "name VARCHAR(45) NULL," +
@@ -33,7 +31,7 @@
 
     @Override
     public void dropUsersTable() {
-        Session session = getSessionFactory().openSession();
+        Session session = Util.getSessionFactory().openSession();
         Transaction transaction = session.beginTransaction();
 
         String sql = "DROP TABLE IF EXISTS users";
@@ -55,7 +53,6 @@
             session.save(user);
             System.out.println("User с именем - " + user.getName() + " добавлен в базу данных");
             transaction.commit();
-            session.close();
         } catch (Exception e) {
             if (transaction != null) {
                 transaction.rollback();
@@ -76,7 +73,6 @@
             User user = session.get(User.class, id);
             session.delete(user);
             transaction.commit();
-            session.close();
         } catch (Exception e) {
             if (transaction != null) {
                 System.out.println("Что-то пошло не так. Откатить транзакцию...");
